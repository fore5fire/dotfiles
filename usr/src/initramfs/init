#!/bin/busybox sh

/bin/busybox --install -s

# Mount the /proc, /sys, and /dev filesystems.
mount -t proc none /proc
mount -t sysfs none /sys
mount -t devtmpfs none /dev

cmdline() {
    local value
    value=" $(cat /proc/cmdline) "
    value="${value##* ${1}=}"
    value="${value%% *}"
    [ "${value}" != "" ] && echo "${value}"
}

rescue_shell() {
    echo "Something went wrong. Dropping to a shell."
    exec sh
}

# disable kernel messages from popping onto the screen.
echo 0 > /proc/sys/kernel/printk

# Decrypt the swap partition.
echo "unlocking encrypted swap partition"
cryptsetup --tries 5 --allow-discards luksOpen /dev/nvme0n1p3 luksswap || rescue_shell
echo "unlocked encrypted swap at /dev/mapper/luksswap"

# Attempt to resume from hibernate when try-resume=1 is passed.
if [ $(cmdline try-resume) = 1 ]; then
	echo "attempting system resume"
	echo /dev/mapper/luksswap > /sys/power/resume || echo "resume failed, trying normal boot"
fi

# Decrypt the root filesystem.
echo "unlocking encrypted root partition"
cryptsetup --tries 5 --allow-discards luksOpen /dev/nvme0n1p2 luksroot || rescue_shell
echo "unlocked encrypted root at /dev/mapper/luksroot"

# re-enable kernel messages.
echo 1 > /proc/sys/kernel/printk

# Mount the root filesystem.
mount -o compress=zstd,subvol=@root /dev/mapper/luksroot /mnt/root || rescue_shell
echo "mounted root filesystem"

# Clean up.
umount /proc
umount /sys
umount /dev

# Boot the real thing.
echo "starting /sbin/init..."
exec switch_root /mnt/root /sbin/init || rescue_shell

